# To use this configuration, copy its contents to a new file at the root of the project.
# Name this file app.yaml, and it will be picked up by the server.
# app.yaml is in the git ignore to prevent any secrets from leaking.

runtime: nodejs14

env_variables:
  PORT: 8080
  # Valid Search:
  # Longest Common Sequence: "lcs"
  # Levenshtein Distance: "levenshtein_distance"
  # Levenshtein Distance w/ Word Seperators - Double Mean: "levenshtein_distance_wsdm"
  SEARCHALGORITHM: "lcs"
  SERVERURL: "http://localhost:8080"
  # Paginate is the amount to paginate results by.
  PAGINATE: 30
  # The cache time defines how long until an in memory resource is expired, and demands to
  # be read from disk again. Measured in milliseconds.
  # The default value for testing is 10 minutes = 600000
  CACHETIME: 600000
  # Should only be enabled in non-production builds. Enabled as true for extra output during testing.
  DEBUG: true
  # This indicates how the server will retreive data.
  # - "filesystem": Means the data is within the ./data folder.
  # - "gcs": Means the data will be hosted in Google Cloud Storage.
  FILESTORE: "filesystem"
  # The following settings are for storing data within Google Cloud Storage
  GCLOUD_STORAGE_BUCKET: "bucket_name"
  GOOGLE_APPLICATION_CREDENTIALS: "local_file_path"
  # The GH Client ID, for use with OAuth
  GH_CLIENTID: ""
  # The token to allow us to interact with GitHub.
  GH_TOKEN: ""
  # The github username associated with the token.
  GH_USERNAME: ""
  # The User Agent thats used to communicate with GitHub
  GH_USERAGENT: "Pulsar-Edit Bot"
  # The following are Database settings that should be pretty self-explainitory.
  DB_HOST: ""
  DB_USER: ""
  DB_PASS: ""
  DB_DB: ""
  DB_PORT: 8080
  # This should be the path to a cert file for your DB
  DB_SSL_CERT: ""
